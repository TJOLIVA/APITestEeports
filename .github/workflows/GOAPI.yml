name: GO_BACKEND_QA_API
on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Release name'     
        required: true
        default: 'Sprint 1'
      tags:
        description: 'Test run name'
        required: true
      runtype:
        type: choice
        description: 'Run type'
        required: true
        options: 
        - test
        - regression
jobs:
  global-go-api:
    runs-on: ubuntu-latest
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
    # Install Node
      - name: Install Node
        uses: actions/setup-node@v2
        with: 
          node-version: '16.x'
          
    # Install the newman command line utility and also install the html extra reporter
      - name: Install newman and reporters
        run: |
          npm install -g newman
          npm install -g newman-reporter-htmlextra
          npm install -g newman-reporter-qase
          
    # Make directory to upload the test results
      - name: Make Directory for results
        run: mkdir -p testResults
        
      - name: regression workflow
        if: ${{ github.event.inputs.runtype == 'regression'}} 
        run:
          newman run "go-backend_cicd_qa.postman_collection.json" -e "go-backend_qa.postman_environment.json" 
            -r cli,htmlextra,qase 
            --reporter-htmlextra-export testResults/htmlreport.html 
            --reporter-qase-logging 
            --reporter-qase-projectCode PCG
            --reporter-qase-apiToken 745a19ec6abd2f5412ad144d2d4547a313a602c4
            --reporter-qase-runName "${{github.event.inputs.logLevel}} - ${{github.event.inputs.tags}}"
            
      - name: test workflow
        if: ${{ github.event.inputs.runtype == 'test'}} 
        run:
          newman run "go-backend_cicd_qa.postman_collection.json" -e "go-backend_qa.postman_environment.json" 
          -r cli,htmlextra
          --reporter-htmlextra-export testResults/htmlreport.html
                    
    # Upload the contents of Test Results directory to workspace
      - name: Output the run Details
        if: always()
        uses: actions/upload-artifact@v2
        with: 
          name: "GLOBAL_GO_${{github.event.inputs.tags}}_reports"
          path: testResults
          

      #- name: check run type
      #  uses: marcdomain/set-variables@v1
      #  with:
      #   variables: |
      #     PROJ: "${{ github.event.inputs.runtype }}" == "test" ? "PCG" : "EDUC"
